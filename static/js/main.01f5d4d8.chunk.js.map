{"version":3,"sources":["components/Circles/Circles.jsx","components/CircleSelector/CircleSelector.jsx","App.js","reportWebVitals.js","index.js"],"names":["Circles","props","console","log","clicked","className","CircleSelector","onClick","handleCircleChange","value","App","e","setState","selectedItem","target","state","this","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mUAeeA,G,YAZC,SAACC,GAEf,OADAC,QAAQC,IAAIF,EAAMG,SAEhB,yBAAKC,UAAU,WACb,yBAAKA,UAA6B,MAAlBJ,EAAMG,QAAkB,WAAa,IAArD,KACA,yBAAKC,UAA6B,MAAlBJ,EAAMG,QAAkB,WAAa,IAArD,KACA,yBAAKC,UAA6B,MAAlBJ,EAAMG,QAAkB,WAAa,IAArD,KACA,yBAAKC,UAA6B,MAAlBJ,EAAMG,QAAkB,WAAa,IAArD,QC4BSE,G,MAnCQ,SAACL,GACtB,OACE,yBAAKI,UAAU,kBACb,4BACEA,UAA6B,MAAlBJ,EAAMG,QAAkB,WAAa,GAChDG,QAASN,EAAMO,mBACfC,MAAM,KAHR,mBAOA,4BACEJ,UAA6B,MAAlBJ,EAAMG,QAAkB,WAAa,GAChDG,QAASN,EAAMO,mBACfC,MAAM,KAHR,mBAOA,4BACEJ,UAA6B,MAAlBJ,EAAMG,QAAkB,WAAa,GAChDG,QAASN,EAAMO,mBACfC,MAAM,KAHR,mBAOA,4BACEJ,UAA6B,MAAlBJ,EAAMG,QAAkB,WAAa,GAChDG,QAASN,EAAMO,mBACfC,MAAM,KAHR,sBCISC,E,kDAzBb,WAAYT,GAAQ,IAAD,8BACjB,cAAMA,IAIRO,mBAAqB,SAACG,GACpB,EAAKC,SAAS,CAAEC,aAAcF,EAAEG,OAAOL,SAJvC,EAAKM,MAAQ,CAAEF,aAAc,KAFZ,E,0CASnB,WACE,OACE,yBAAKR,UAAU,OACb,4BAAQA,UAAU,cAAlB,2BACA,8BACE,kBAAC,EAAD,CACEG,mBAAoBQ,KAAKR,mBACzBJ,QAASY,KAAKD,MAAMF,eAEtB,kBAAC,EAAD,CAAST,QAASY,KAAKD,MAAMF,qB,GAnBrBI,aCOHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.01f5d4d8.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./Circles.css\";\n\nconst Circles = (props) => {\n  console.log(props.clicked);\n  return (\n    <div className=\"Circles\">\n      <div className={props.clicked === \"1\" ? \"selected\" : \"\"}>1</div>\n      <div className={props.clicked === \"2\" ? \"selected\" : \"\"}>2</div>\n      <div className={props.clicked === \"3\" ? \"selected\" : \"\"}>3</div>\n      <div className={props.clicked === \"4\" ? \"selected\" : \"\"}>4</div>\n    </div>\n  );\n};\n\nexport default Circles;\n","import React from \"react\";\nimport \"./CircleSelector.css\";\n\nconst CircleSelector = (props) => {\n  return (\n    <div className=\"CircleSelector\">\n      <button\n        className={props.clicked === \"1\" ? \"selected\" : \"\"}\n        onClick={props.handleCircleChange}\n        value=\"1\"\n      >\n        SELECT CIRCLE 1\n      </button>\n      <button\n        className={props.clicked === \"2\" ? \"selected\" : \"\"}\n        onClick={props.handleCircleChange}\n        value=\"2\"\n      >\n        SELECT CIRCLE 2\n      </button>\n      <button\n        className={props.clicked === \"3\" ? \"selected\" : \"\"}\n        onClick={props.handleCircleChange}\n        value=\"3\"\n      >\n        SELECT CIRCLE 3\n      </button>\n      <button\n        className={props.clicked === \"4\" ? \"selected\" : \"\"}\n        onClick={props.handleCircleChange}\n        value=\"4\"\n      >\n        SELECT CIRCLE 4\n      </button>\n    </div>\n  );\n};\n\nexport default CircleSelector;\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport Circles from \"./components/Circles/Circles\";\nimport CircleSelector from \"./components/CircleSelector/CircleSelector\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { selectedItem: \"1\" };\n  }\n\n  handleCircleChange = (e) => {\n    this.setState({ selectedItem: e.target.value });\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">UNIT 4 FINAL ASSESSMENT</header>\n        <main>\n          <CircleSelector\n            handleCircleChange={this.handleCircleChange}\n            clicked={this.state.selectedItem}\n          />\n          <Circles clicked={this.state.selectedItem} />\n        </main>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}